import React, {Component} from 'react'
import * as R from 'ramda'
import {connect} from 'react-redux'
import {Segment,Image,List} from 'semantic-ui-react'
import {fetchClients} from 'actions'
import {getClients, getActiveClient} from 'selectors'
import {Link, withRouter} from 'react-router'
import {compose} from 'redux'
import classNames from 'classnames'

class Clients extends Component{

    componentDidMount(){
        this.props.fetchClients()
    }

    renderClient({general,job,id},index,activeClientId){
        const getActiveState = (id === Number(activeClientId)) ? true : false;
        const linkClass = classNames({
            'active': getActiveState
        })
        return(
            <List.Item as={Link} to={`/client/${id}`} key={index} className={linkClass}>
                <Image avatar src={general.avatar} size='tiny'/>
                <List.Content>
                    <List.Header>
                        {general.fistName} {general.lastName}
                    </List.Header>
                    <List.Description>
                        {job.company}
                    </List.Description>
                </List.Content>
            </List.Item>
        )
    }

    
    render(){
        const {clients,activeClientId} = this.props
        return(
            <Segment>
                <List selection verticalAlign='middle'>
                    {clients && clients.map((value,index) => this.renderClient(value,index,activeClientId))}
                </List>
            </Segment>
        )
    }
}

const mapStateToProps = (state,ownProps) =>{
    return{
        clients: getClients(state),
        activeClientId: getActiveClient(ownProps)
    }
   
}

const mapDispacthToProps = {
    fetchClients
}

export default compose(
    withRouter,
    connect(mapStateToProps,mapDispacthToProps)
)(Clients)