import * as R from 'ramda'

export const getClientById = (state, id) => R.prop(id, state.api)

export const getClients = (state) => {

    const applySearch = (item) => {
        let count = 0
        let text = state.clients.search
        for (let prop in item) {
            if(typeof item[prop] === 'object' && count === 0){
                let child = item[prop];
                for (let child_prop in child) {
                    let str = child[child_prop]
                    if(typeof str === 'string' && R.contains(text.toLowerCase(),str.toLowerCase())){
                        count++
                        break;
                    }
                }
            }
            
            else if(count === 0){
                let str = item[prop].toString()
                if(R.contains(text.toLowerCase(),str.toLowerCase())){
                    count++
                    break;
                }
            }

        }
        if(count !== 0){
            return true
        }
    }
    

    const clients = R.compose(
        R.filter(applySearch),
        R.map(id => getClientById(state, id))
    )(state.clients.ids)

    return clients
}


export const getActiveClient = ownProps => R.path(['params','id'],ownProps)