import * as R from 'ramda'

export const getClientById = (state, id) => R.prop(id, state.api)

export const getClients = (state) => {
    const applySearch = (item) => {
        let count = 0
        for (let prop in item) {
            if(typeof item[prop] === 'object' && count === 0){
                let child = item[prop];
                for (let child_prop in child) {
                    if(typeof child[child_prop] === 'string' && R.contains(state.clients.search,child[child_prop])){
                        count++
                        return true
                        break;
                    }
                }
            }
            else if(count === 0){
                if(R.contains(state.clients.search,item[prop])){
                    count++
                    return true
                    break;
                }
            }
                    
        }
    }
    

    const clients = R.compose(
        R.filter(applySearch),
        R.map(id => getClientById(state, id))
    )(state.clients.ids)
    return clients
}